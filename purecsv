#!/usr/bin/env bash
set +vx
# purecsv - Make virtual FTP accounts and optionally mail out details
# Usage: purecsv [-d|--delete]
#        -d/--delete:  Delete all current users and start the database afresh.
#        Otherwise current users' details are preserved (unless given new).
#    Processes `pure.csv` (in PWD): [#]<directory>,<username>,[<email>]
#        Lines starting with '#' are ignored. Always start <directory> with '/'.
# Required: pureftp[github.com/pepa65/pure-ftpd](pure-pw) grep sed
#           mailer[github.com/pepa65/mailer] coreutils(mkdir rm mv cp mktemp touch)

Err(){ # 1:msg
	echo "Error: $1"
	exit 1
}

Add(){ # 1:dir 2:user 3:email I:home,delete
	local dir=$1 user=$2 mail=$3 pw=$(mktemp -u XXXXXXXXXXXX)  # pw: No commas!
	echo -e "$pw\n$pw" |sudo pure-pw useradd "$user" -u pureftp -d "$home$dir" &>/dev/null &&
		echo "User '$user' at '$home$dir' added to PureFTPd Virtual Users database" &&
		sudo -u pureftp -g pureftp mkdir -p "$home$dir" &&
		entries+=("$mail,$user,$dir,$pw") &&
		return
	# Adding virtual user didn't work, so try to delete a pre-existing user
	((!delete)) &&
		echo "Username '$user' unchanged!" &&
		return
	# Delete user from database and then add it
	! sudo pure-pw userdel "$user" &&
		Err "cannot add or delete user '$user'"
	echo "Old username '$user' deleted first"
	Add "$1" "$2" "$3"
}

# Check commandline argument
passwd=/etc/pureftpd.passwd home=/home/pureftp csv=pure.csv delete=0 purge=0
[[ $2 ]] &&
	Err "too many arguments, only -d/--delete / -p/--purge allowed"

[[ $1 ]] &&
	! [[ $1 = -d || $1 = --delete || $1 = -p || $1 = --purge ]] &&
	Err "wrong argument, only -d|--delete | -p|--purge allowed"

[[ $1 ]] &&
	delete=1
[[ $1 = -p || $1 = --purge ]] &&
	purge=1
[[ ! -f $csv ]] &&
	Err "csv-file '$csv' not found"

if ((delete))
then # Start with empty database
	sudo mv -f --backup=t "$passwd" "$passwd-backup"
	sudo touch "$passwd"
	echo "Database emptied, backup made"
else # Just backup and keep the current database
	sudo cp -f --backup=t "$passwd" "$passwd-backup"
	echo "Database backup made"
fi
ls -l "$passwd"-*

while IFS=, read -r -d $'\n' dir user email
do # Process line
	[[ ${dir:0:1} = '#' ]] &&
		echo "Comment: $dir,$user,$email" &&
		continue
	[[ -z $dir ]] && Err "no directory found in line"
	[[ $dir = *' '* ]] && Err "directory cannot have spaces"
	[[ $dir = *,* ]] && Err "directory cannot have commas"
	[[ -z $user ]] && Err "no username found in line"
	[[ $user = *' '* ]] && Err "username cannot have spaces"
	[[ $user = *,* ]] && Err "username cannot have commas"
	[[ $mail = *' '* ]] && Err "email cannot have spaces"
	[[ $mail = *,* ]] && Err "email cannot have commas"
	Add "$dir" "$user" "$email"
done <"$csv"

sudo pure-pw mkdb &&
	echo "Database changes committed, PureFTPd is now using them" ||
	Err "failure to commit changes to database"

# Mailing the details out
read -p "Press Enter to send all the mails (Ctrl-C to quit)"

_=$(grep '^machine ' .netrc) machine=${_##* }
_=$(grep '^login ' .netrc) login=${_##* }
_=$(grep '^password ' .netrc) password=${_##* }
[[ -z $machine || -z $login || -z $password ]] &&
	Err "prep the file '.netrc' with lines 'machine', 'login' and 'password'"

text="This is an automated mail from CRICS.
Your information for logging in to the FTP server for Computer Science:

FTP server: $machine
Username: USER
Password: PW

Blessings,
The IT Team
"

for entry in "${entries[@]}"  # "user,dir,pw,mail"
do # Get data and mail it
	IFS=, read -r mail user dir pw mail <<<"$entry"
	if [[ $mail ]]
	then
		txt=$(sed -e "s/USER/$user/" -e "s/PW/$pw/" <<<"$text")
		mailer -m "$txt" -t $mail -s "Computer Science FTP login" -u $login -p $password
		echo "Login details for user '$user' on '$dir' mailed to: $mail"
	else
		echo "Password for user '$user' on '$dir' is: $pw"
	fi
done
